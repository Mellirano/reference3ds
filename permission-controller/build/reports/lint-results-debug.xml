<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.0.3">

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="        editor.commit();"
        errorLine2="               ~~~~~~~~">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/java/ua/privatbank/permissioncontroller/PermissionUtils.java"
            line="203"
            column="16"/>
    </issue>

    <issue
        id="MutatingSharedPrefs"
        severity="Warning"
        message="Do not modify the set returned by `SharedPreferences.getStringSet()``"
        category="Correctness"
        priority="6"
        summary="Mutating an Immutable SharedPrefs Set"
        explanation="As stated in the docs for `SharedPreferences.getStringSet`, you must not modify the set returned by `getStringSet`:&#xA;&#xA;  &quot;Note that you &lt;em>must not&lt;/em> modify the set instance returned    by this call.  The consistency of the stored data is not guaranteed    if you do, nor is your ability to modify the instance at all.&quot;"
        errorLine1="            set.add(permission.getPermissionName());"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/java/ua/privatbank/permissioncontroller/PermissionUtils.java"
            line="200"
            column="13"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="Call requires API level 24 (current min is 19): `java.lang.Iterable#forEach`"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="                permissions.forEach {"
        errorLine2="                            ~~~~~~~">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/java/ua/privatbank/permissioncontroller/PermissionFrontController.kt"
            line="17"
            column="29"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="        View view = layoutInflater.inflate(R.layout.permission_dialog, null);"
        errorLine2="                                                                       ~~~~">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/java/ua/privatbank/permissioncontroller/DefaultPermissionExplanationDialogFactory.java"
            line="115"
            column="72"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="        View viewPermission = layoutInflater.inflate(R.layout.permission_item, null);"
        errorLine2="                                                                               ~~~~">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/java/ua/privatbank/permissioncontroller/DefaultPermissionExplanationDialogFactory.java"
            line="130"
            column="80"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.appcompat:appcompat than 1.2.0 is available: 1.5.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &quot;androidx.appcompat:appcompat:$rootProject.properties.appcompatVersion&quot;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/build.gradle"
            line="38"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of org.jetbrains.kotlin:kotlin-stdlib-jdk7 than 1.6.20 is available: 1.7.20"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &quot;org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.properties.kotlin_version&quot;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/build.gradle"
            line="40"
            column="20"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ab_close` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/res/drawable-hdpi/ab_close.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.perm_group_microphone` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;perm_group_microphone&quot;>Микрофон&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/res/values/strings.xml"
            line="11"
            column="13"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `ab_close.png` varies significantly in its density-independent (dip) size across the various density versions: drawable-hdpi/ab_close.png: 24x24 dp (36x36 px), drawable-mdpi/ab_close.png: 24x24 dp (24x24 px), drawable-xhdpi/ab_close.png: 24x24 dp (48x48 px), drawable-xxhdpi/ab_close.png: 16x16 dp (48x48 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/res/drawable-xxhdpi/ab_close.png"/>
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/res/drawable-xhdpi/ab_close.png"/>
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/res/drawable-hdpi/ab_close.png"/>
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/res/drawable-mdpi/ab_close.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ab_close.png` icon has identical contents in the following configuration folders: drawable-xhdpi, drawable-xxhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/res/drawable-xxhdpi/ab_close.png"/>
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/res/drawable-xhdpi/ab_close.png"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Title&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Title&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/res/layout/permission_dialog.xml"
            line="13"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Message&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Message&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/valery/AndroidStudioProjects/reference3ds/permission-controller/src/main/res/layout/permission_dialog.xml"
            line="23"
            column="9"/>
    </issue>

</issues>
